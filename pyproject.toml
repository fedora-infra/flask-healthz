[tool.poetry]
name = "flask-healthz"
version = "1.0.1"
description = "A simple module to allow you to easily add health endpoints to your Flask application"

license = "BSD-3-Clause"

authors = [
  "Fedora Infrastructure <admin@fedoraproject.org>"
]

readme = 'README.md'

repository = "https://github.com/fedora-infra/flask-healthz"
homepage = "https://github.com/fedora-infra/flask-healthz"

include = [
    { path = "tox.ini", format = "sdist" },
    { path = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.8.0"
flask = "^2.0.0 || ^3.0.0"

[tool.poetry.group.dev.dependencies]
black = "*"
pytest = "*"
coverage = {extras = ["toml"], version = "*"}
pytest-cov = "*"
pre-commit = "*"
ruff = "*"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "S", "B", "RUF"]
ignore = ["RUF012"]

[tool.ruff.lint.isort]
lines-after-imports = 2
order-by-type = false

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "E501"]
"flask_healthz/__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["flask_healthz"]

[tool.coverage.paths]
source = [
   "flask_healthz",
   ".tox/*/site-packages/flask_healthz",
]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    # Don't complain if tests don't hit defensive assertion code
    "raise AssertionError",
    "raise NotImplementedError",
    "\\.\\.\\.",
]
omit = [
    "tests/*",
    "flask_healthz/__init__.py",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
